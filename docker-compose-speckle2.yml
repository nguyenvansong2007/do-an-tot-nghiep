version: '2.4'
services:
  postgres:
    build:
      context: .
      dockerfile: utils/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: speckle
      POSTGRES_USER: speckle
      POSTGRES_PASSWORD: speckle
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - ./setup/db/10-docker_postgres_init.sql:/docker-entrypoint-initdb.d/10-docker_postgres_init.sql
      - ./setup/db/11-docker_postgres_keycloack_init.sql:/docker-entrypoint-initdb.d/11-docker_postgres_keycloack_init.sql
    ports:
      - '127.0.0.1:5432:5432'

  speckle-ingress:
    build:
      context: .
      dockerfile: utils/docker-compose-ingress/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-docker-compose-ingress:local
    restart: always
    ports:
      - '0.0.0.0:80:8080'
    environment:
      FILE_SIZE_LIMIT_MB: '100'
      NGINX_ENVSUBST_OUTPUT_DIR: '/etc/nginx'

  speckle-frontend-2:
    build:
      context: .
      dockerfile: packages/frontend-2/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-frontend-2:local
    restart: always
    environment:
      NUXT_PUBLIC_SERVER_NAME: 'local'
      NUXT_PUBLIC_API_ORIGIN: 'http://103.130.213.140'
      NUXT_PUBLIC_BASE_URL: 'http://103.130.213.140'
      NUXT_PUBLIC_BACKEND_API_ORIGIN: 'http://103.130.213.140:3000'
      NUXT_PUBLIC_LOG_LEVEL: 'warn'
      NUXT_REDIS_URL: 'redis://redis'
      LOG_LEVEL: 'info'
    ports:
      - '0.0.0.0:3007:3007'

  speckle-server:
    build:
      context: .
      dockerfile: packages/server/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-server:local
    restart: always
    healthcheck:
      test:
        - CMD
        - /nodejs/bin/node
        - -e
        - "try { require('node:http').request({headers: {'Content-Type': 'application/json'}, port:3000, hostname:'127.0.0.1', path:'/readiness', method: 'GET', timeout: 2000 }, (res) => { body = ''; res.on('data', (chunk) => {body += chunk;}); res.on('end', () => {process.exit(res.statusCode != 200 || body.toLowerCase().includes('error'));}); }).end(); } catch { process.exit(1); }"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 90s
    environment:
      CANONICAL_URL: 'http://103.130.213.140'
      SESSION_SECRET: 'TODO:Replace'
      STRATEGY_LOCAL: 'true'
      LOG_LEVEL: 'info'
      POSTGRES_URL: 'postgres'
      POSTGRES_USER: 'speckle'
      POSTGRES_PASSWORD: 'speckle'
      POSTGRES_DB: 'speckle'
      REDIS_URL: 'redis://redis'
      S3_ENDPOINT: 'http://minio:9000'
      S3_ACCESS_KEY: 'minioadmin'
      S3_SECRET_KEY: 'minioadmin'
      S3_BUCKET: 'speckle-server'
      S3_CREATE_BUCKET: 'true'
      S3_REGION: ''
      FILE_SIZE_LIMIT_MB: 100
      EMAIL_FROM: 'no-reply@example.org'
      USE_FRONTEND_2: true
      FRONTEND_ORIGIN: 'http://103.130.213.140'  # Trỏ tới cổng 3007 của frontend
      ONBOARDING_STREAM_URL: 'https://latest.speckle.systems/projects/843d07eb10'
    ports:
      - '0.0.0.0:3000:3000'  # Cổng 3000 cho server

  preview-service:
    build:
      context: .
      dockerfile: packages/preview-service/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-preview-service:local
    restart: always
    mem_limit: '3000m'
    memswap_limit: '3000m'
    environment:
      HOST: '127.0.0.1'
      METRICS_HOST: '127.0.0.1'
      LOG_LEVEL: 'info'
      PG_CONNECTION_STRING: 'postgres://speckle:speckle@postgres/speckle'

  webhook-service:
    build:
      context: .
      dockerfile: packages/webhook-service/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-webhook-service:local
    restart: always
    environment:
      LOG_LEVEL: 'info'
      PG_CONNECTION_STRING: 'postgres://speckle:speckle@postgres/speckle'

  fileimport-service:
    build:
      context: .
      dockerfile: packages/fileimport-service/Dockerfile
    platform: linux/amd64
    image: speckle/speckle-fileimport-service:local
    restart: always
    environment:
      LOG_LEVEL: 'info'
      PG_CONNECTION_STRING: 'postgres://speckle:speckle@postgres/speckle'
      SPECKLE_SERVER_URL: 'http://103.130.213.140:3000'
      FILE_IMPORT_TIME_LIMIT_MIN: 10


volumes:
  postgres-data:
